# Generated by Django 3.2.19 on 2023-06-06 05:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='images/coach/')),
                ('country', models.CharField(max_length=50)),
                ('birth_date', models.DateField()),
                ('birth_place', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Cricketer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='images/cricketer/')),
                ('country', models.CharField(max_length=50)),
                ('birth_date', models.DateField()),
                ('birth_place', models.CharField(max_length=50)),
                ('height', models.IntegerField()),
                ('player_role', models.CharField(max_length=50)),
                ('batting_style', models.CharField(max_length=50)),
                ('bowling_style', models.CharField(max_length=50)),
                ('age', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_format', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=50)),
                ('team_logo', models.ImageField(upload_to='images/team/')),
                ('country', models.CharField(max_length=50)),
                ('home_ground', models.CharField(max_length=50)),
                ('established', models.DateField()),
                ('captain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.cricketer')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.coach')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateField()),
                ('venue', models.CharField(max_length=50)),
                ('result', models.CharField(max_length=20)),
                ('team_1_batting_score', models.IntegerField()),
                ('team_1_bowling_score', models.IntegerField()),
                ('team_2_batting_score', models.IntegerField()),
                ('team_2_bowling_score', models.IntegerField()),
                ('match_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.matchformat')),
                ('match_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_winner', to='cricketer_profiler_app.team')),
                ('player_of_the_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.cricketer')),
                ('team_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_1', to='cricketer_profiler_app.team')),
                ('team_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_2', to='cricketer_profiler_app.team')),
                ('toss_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toss_winner', to='cricketer_profiler_app.team')),
            ],
        ),
        migrations.CreateModel(
            name='FieldingCareer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catches', models.IntegerField()),
                ('run_outs', models.IntegerField()),
                ('stumpings', models.IntegerField()),
                ('cricketer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.cricketer')),
                ('match_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.matchformat')),
            ],
        ),
        migrations.CreateModel(
            name='CricketerTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cricketer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.cricketer')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.team')),
            ],
        ),
        migrations.CreateModel(
            name='CoachTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.coach')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.team')),
            ],
        ),
        migrations.CreateModel(
            name='BowlingCareer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches', models.IntegerField()),
                ('innings', models.IntegerField()),
                ('balls', models.IntegerField()),
                ('runs', models.IntegerField()),
                ('wickets', models.IntegerField()),
                ('best_bowling_innings', models.CharField(max_length=50)),
                ('best_bowling_match', models.CharField(max_length=50)),
                ('economy', models.FloatField()),
                ('average', models.FloatField()),
                ('strike_rate', models.FloatField()),
                ('four_wickets', models.IntegerField()),
                ('five_wickets', models.IntegerField()),
                ('cricketer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.cricketer')),
                ('match_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.matchformat')),
            ],
        ),
        migrations.CreateModel(
            name='BattingCareer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches', models.IntegerField()),
                ('innings', models.IntegerField()),
                ('not_outs', models.IntegerField()),
                ('runs', models.IntegerField()),
                ('highest_score', models.IntegerField()),
                ('average', models.FloatField()),
                ('balls_faced', models.IntegerField()),
                ('strike_rate', models.FloatField()),
                ('hundreds', models.IntegerField()),
                ('fifties', models.IntegerField()),
                ('fours', models.IntegerField()),
                ('sixes', models.IntegerField()),
                ('cricketer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.cricketer')),
                ('match_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cricketer_profiler_app.matchformat')),
            ],
        ),
    ]
